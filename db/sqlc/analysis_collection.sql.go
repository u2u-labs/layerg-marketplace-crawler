// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: analysis_collection.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const upsertAnalysisCollection = `-- name: UpsertAnalysisCollection :exec
INSERT INTO "AnalysisCollection" (id, "collectionId", "keyTime", address, type, volume, vol, "volumeWei", "floorPrice",
                                  floor, "floorWei", items, owner, "createdAt")
VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
ON CONFLICT ("id")
    DO UPDATE
    SET volume       = EXCLUDED.volume,
        vol          = EXCLUDED.vol,
        "volumeWei"  = EXCLUDED."volumeWei",
        "floorPrice" = EXCLUDED."floorPrice",
        floor        = EXCLUDED.floor,
        "floorWei"   = EXCLUDED."floorWei",
        items        = EXCLUDED.items,
        owner        = EXCLUDED.owner
`

type UpsertAnalysisCollectionParams struct {
	ID           string    `json:"id"`
	CollectionId uuid.UUID `json:"collectionId"`
	KeyTime      string    `json:"keyTime"`
	Address      string    `json:"address"`
	Type         string    `json:"type"`
	Volume       string    `json:"volume"`
	Vol          float64   `json:"vol"`
	VolumeWei    string    `json:"volumeWei"`
	FloorPrice   int64     `json:"floorPrice"`
	Floor        float64   `json:"floor"`
	FloorWei     string    `json:"floorWei"`
	Items        int64     `json:"items"`
	Owner        int64     `json:"owner"`
	CreatedAt    time.Time `json:"createdAt"`
}

func (q *Queries) UpsertAnalysisCollection(ctx context.Context, arg UpsertAnalysisCollectionParams) error {
	_, err := q.db.ExecContext(ctx, upsertAnalysisCollection,
		arg.ID,
		arg.CollectionId,
		arg.KeyTime,
		arg.Address,
		arg.Type,
		arg.Volume,
		arg.Vol,
		arg.VolumeWei,
		arg.FloorPrice,
		arg.Floor,
		arg.FloorWei,
		arg.Items,
		arg.Owner,
		arg.CreatedAt,
	)
	return err
}
